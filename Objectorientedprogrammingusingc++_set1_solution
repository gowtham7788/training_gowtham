1) Option D. Base class object will call base class function and derived class object will call derived class function.

2) Size of BaseClass 8
   Size of DerivedClass 12
   In Base class two integer variables are present. Size of one integer variable is 4. So size of base class is 8.
   In derived class one integer variable is present. The derived class has the ability to access the base class variables also. In base class two integer variable is present. So totally 12.
  
3) Option A. Because a derived-class object has all the properties (data and functions) of a base-class object, so it can be treated just like one for all intents and purposes (including being pointed at)

4) Option E.	only destructs objects declared in the try block which eventually catches it.

5) throw in destructor will terminate the program.
   In destructor we cannot throw an exception , so it will terminate the program.
   
6) Class:
        class object is created on Heap memory
        Default access specifier is Private
        class can inherit the another class with private as default
   Structure:
        structure object is created on Stack memory
        Default access specifier is Public
        structure cannot inherit another structure with public as default
        
7) The class name had to change while creating object as
    pilot *george =new pilot();
    
8) using namespace std;
#include<iostream>
#include<cstring>
#include<cctype>
bool checkUsername(string username)
{
	int i;
     if (username.capacity() <2 )
     {
     	throw "BadLengthException";
  	 }
	   	for (i=0;i<username.capacity();i++)
	 	  {
	 		  if(isdigit(username[i]))
	 		  {
	 			  return 0;
			  }
		  }	 
	 return 1;
}
int main()
{
    string username;
    cin>>username;
    try
	  {
	    bool isValid = checkUsername(username);
    	
	    if(isValid)
      {
         cout<<"\nValid";
      }
      else
      {
         cout<<"\nInvalid";
      }
    }
    catch(const char* msg)
    {
    	cout<<"\n"<<msg;
	  }
   return 0;
}
 
9) Remove " *this=old  " from line number 18.
   
10) Because the virtual function is called from the destructor at the line number 20.

11) Because Linux and Windows are not having same directories. In Linux that directory is present but in Windows that directory is not present.

12) Because "default" is present as "defualt". So it cannot taken as default case. That's only the error message is not print.
